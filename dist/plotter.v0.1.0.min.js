/*! plotter - v0.1.0 - 2013-08-02
* http://github.com/trabus/plotter
* Copyright (c) 2013 Jake Bixby; Licensed  */
!function(a,b){"use strict";"function"==typeof define&&define.amd?define([],b):a.Plotter=b()}(this,function(){"use strict";var a=function(a,b,c){this.width=a,this.height=b,this.props=c||{}};return a.prototype.initialized=!1,a.prototype.props=null,a.prototype.width=800,a.prototype.height=600,a.prototype.enabled=!1,a.prototype.animate=!1,a.prototype.title=" ",a.prototype.data={},a.prototype.canvas=null,a.prototype.ctx=null,a.prototype.memcanvas=null,a.prototype.memctx=null,a.prototype.lines=[],a.prototype.currentLine=0,a.prototype.currentPoint=0,a.prototype.lastPoint={x:0,y:0},a.prototype.redoQueue=[],a.prototype.init=function(){if(!this.initialized){this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.ctx=this.canvas.getContext("2d"),this.memcanvas=document.createElement("canvas"),this.memcanvas.width=this.canvas.width,this.memcanvas.height=this.canvas.height,this.memctx=this.memcanvas.getContext("2d"),this.enabled=!1,this.lineWidth=this.props.lineWidth||4,this.lineColor=this.props.lineColor||"#000000",this.ctx.lineJoin="round",this.ctx.lineCap="round",this.currentLine=0,this.currentPoint=0;var a=this;this.canvas.onmousedown=function(b){var c=null==b.offsetX?b.layerX-a.canvas.offsetLeft:b.offsetX,d=null==b.offsetY?b.layerY-a.canvas.offsetTop:b.offsetY;a.lines[a.currentLine]={lineColor:a.lineColor,lineWidth:a.lineWidth,points:[{x:c,y:d}]},a.ctx.lineWidth=a.lineWidth,a.ctx.strokeStyle=a.lineColor,a.enabled=!0,a.animate=!1},this.canvas.onmouseup=function(){if(a.lines[a.currentLine]){var b=a.lines[a.currentLine].points;a.enabled&&(a.enabled=!1,b.length>3&&a.endLine(b),a.currentLine++)}},this.canvas.onmousemove=function(b){if(a.enabled){var c=null==b.offsetX?b.layerX-a.canvas.offsetLeft:b.offsetX,d=null==b.offsetY?b.layerY-a.canvas.offsetTop:b.offsetY,e=a.lines[a.currentLine].points;e.push({x:c,y:d}),e.length>3?a.continueLine(e):a.startLine(e)}},this.canvas.onmouseout=function(){a.enabled&&a.canvas.onmouseup()},this.initialized=!0}},a.prototype.resizeCanvas=function(a,b){"undefined"!=typeof a&&(this.width=a),"undefined"!=typeof b&&(this.height=b),"undefined"!=typeof this.canvas&&(this.canvas.width=this.width,this.canvas.height=this.height,this.memcanvas.width=this.canvas.width,this.memcanvas.height=this.canvas.height)},a.prototype.cacheCanvas=function(){this.memctx.clearRect(0,0,this.width,this.height),this.memctx.drawImage(this.canvas,0,0)},a.prototype.writeCacheToCanvas=function(){this.ctx.clearRect(0,0,this.width,this.height),this.ctx.drawImage(this.memcanvas,0,0)},a.prototype.setData=function(a){this.clearData(),this.data=a,this.title=a.title||"Blank",this.lines=window.JSON.parse(a.lines),this.redoQueue=[]},a.prototype.getDate=function(){var a=new Date;return a.getMonth()+1+"/"+a.getDate()+"/"+a.getFullYear()},a.prototype.getTime=function(){var a=new Date;return a.getHours()+":"+a.getSeconds()},a.prototype.clearData=function(){this.data={},this.lines=[],this.animate=!1,this.enabled=!1,this.redoQueue=[],this.currentLine=0,this.currentPoint=0,this.ctx.clearRect(0,0,this.width,this.height),this.memctx.clearRect(0,0,this.width,this.height)},a.prototype.dumpData=function(){return this.data.title=this.title,this.data.date=this.getDate(),this.data.time=this.getTime(),this.data.lines=window.JSON.stringify(this.lines),this.data},a.prototype.startLine=function(a){if(this.writeCacheToCanvas(),a.length>3){this.ctx.lineWidth=this.lineWidth,this.strokeStyle=this.lineColor,this.ctx.beginPath(),this.ctx.moveTo(a[0].x,a[0].y);var b,c,d;for(b=1,len=a.length-2;len>b;b++)c=(a[b].x+a[b+1].x)/2,d=(a[b].y+a[b+1].y)/2,this.ctx.quadraticCurveTo(a[b].x,a[b].y,c,d);this.ctx.quadraticCurveTo(a[b].x,a[b].y,a[b+1].x,a[b+1].y),this.ctx.stroke(),this.cacheCanvas()}},a.prototype.continueLine=function(a){if(this.writeCacheToCanvas(),a.length>4){var b=a.length-4;this.ctx.beginPath(),this.ctx.moveTo((a[b-1].x+a[b].x)/2,(a[b-1].y+a[b].y)/2),this.ctx.quadraticCurveTo(a[b].x,a[b].y,(a[b].x+a[b+1].x)/2,(a[b].y+a[b+1].y)/2),this.ctx.stroke(),this.cacheCanvas()}},a.prototype.endLine=function(a){this.writeCacheToCanvas();var b=a.length-3;this.ctx.beginPath(),this.ctx.moveTo((a[b-1].x+a[b].x)/2,(a[b-1].y+a[b].y)/2),this.ctx.quadraticCurveTo(a[b].x,a[b].y,(a[b].x+a[b+1].x)/2,(a[b].y+a[b+1].y)/2),this.ctx.quadraticCurveTo(a[b+1].x,a[b+1].y,a[b+2].x,a[b+2].y),this.ctx.stroke(),this.cacheCanvas()},a.prototype.undo=function(){this.lines.length>=1&&(this.redoQueue.unshift(this.lines.pop()),this.currentLine--,this.redraw())},a.prototype.redo=function(){this.redoQueue.length>=1&&(this.lines.push(this.redoQueue.shift()),this.currentLine++,this.redraw())},a.prototype.redraw=function(){var a,b,c,d,e,f,g,h;for(this.memctx.clearRect(0,0,this.width,this.height),a=0,g=this.lines.length;g>a;a++)if(e=this.lines[a],f=e.points,f.length>3){for(this.writeCacheToCanvas(),this.ctx.lineWidth=e.lineWidth,this.ctx.strokeStyle=e.lineColor,this.ctx.beginPath(),this.ctx.moveTo(f[0].x,f[0].y),b=1,h=f.length-2;h>b;b++)c=(f[b].x+f[b+1].x)/2,d=(f[b].y+f[b+1].y)/2,this.ctx.quadraticCurveTo(f[b].x,f[b].y,c,d);this.ctx.quadraticCurveTo(f[b].x,f[b].y,f[b+1].x,f[b+1].y),this.ctx.stroke(),this.cacheCanvas()}},a.prototype.animateredraw=function(){this.ctx.clearRect(0,0,this.width,this.height),this.memctx.clearRect(0,0,this.width,this.height),this.currentLine=0,this.currentPoint=0,this.animate=!0;var a=this,b=function d(){var b=a.lines[a.currentLine].points;b.length>3?(a.ctx.lineWidth=a.lines[a.currentLine].lineWidth,a.ctx.strokeStyle=a.lines[a.currentLine].lineColor,a.ctx.beginPath(),a.ctx.moveTo(b[0].x,b[0].y),requestAnimationFrame(c)):(a.currentLine++,a.currentLine<a.lines.length&&d())},c=function e(){if(a.animate){var c=a.lines[a.currentLine].points,d=a.currentPoint;a.writeCacheToCanvas(),d<c.length-2?(a.ctx.quadraticCurveTo(c[d].x,c[d].y,(c[d].x+c[d+1].x)/2,(c[d].y+c[d+1].y)/2),a.ctx.stroke(),a.currentPoint++):(a.ctx.quadraticCurveTo(c[d].x,c[d].y,c[d+1].x,c[d+1].y),a.ctx.stroke(),a.currentPoint=0,a.currentLine++,a.cacheCanvas()),a.currentLine<a.lines.length&&(0===a.currentPoint?b():requestAnimationFrame(e))}};this.lines.length>=1&&b()},a});